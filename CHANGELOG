
	- add verify parameter to hxl.io.data, hxl.io.make_input,
  	  etc. Defaults to True; if False, don't try to validate SSL certs
	- fix bug with error messages from scripts
	- fix output bug in command-line scripts
	- fixed bug in merge filter
	- added new "is (not)" operator for row queries

2016-12-02 Release 4.0
	- Fully modularised JSON specs and recipes.
	- Made JSON specs and recipes work recursively.
	- Fix bug that caused select filter to fail after explode filter
	- Added top-level hxl.tagger() function, similar to hxl.data()
	- add optional default_header arg to hxl.model.Column.parse_spec
	- major overhaul of the merge_data filter: now merges *all* columns
	  matching the pattern supplied, and doesn't create an empty
	  column if there are no matching columns in the merge dataset
	- refactored append filter to allow multiple append files in
	  single filter

2016-10-17 Release 3.3
	- Regex ~ and !~ operators in row queries now match anywhere in the cell
	- make row query smart about date comparisons with #date hashtag
	- block numeric/date conversion in row queries for ~ and !~

2016-08-30 Release 3.2
	- add timeout option for opening URLs (avoids long wait in unit
	  tests)
	- encoding fixes for Python2
	- add HXLColumn.has_attribute() method
	- add an optional parsed attribute to HXLRow.get() to try parsing
	  the value according to attributes (currently supports +list)
	- add experimental support for the +list attribute

2016-07-28 Release 3.1
	- change request handling to work better with requests_cache (no
	  more streaming directly from the raw object in the request response)

2016-07-23 Release 3.0
	- use the Python requests library in hxl.io (which will allow
	  add-ons like requests_cache)
	- the tagger now has an option for a default tag
	- add unit tests for Tagger, along option to force a full header
	  match and a default tag for non-matching headers

2016-06-22 Release 2.8
	- add a new Explode filter that changes series data to a more-normalised form (no command-line version yet)
	- improvements to Add Column filter
	- better number handling in Clean Data filter (can now handle exponential notation)
	- add mask parameter to Merge Data filter
	- start support for reading/writing filter chains encoded in JSON
	- added add_attribute and remove_attribute methods for a dataset
	- documentation and unit test improvements
